version: '3.7'

services:
  database-service:
    image: mysql:8
    networks:
      - app-network
    ports:
      - "3306:3306"
    container_name: database-service
    environment:
      MYSQL_DATABASE: cms_db
      MYSQL_ROOT_PASSWORD: password
  cache-service:
    image: redis:7
    networks:
      - app-network
    ports:
      - "6379:6379"
    container_name: cache-service
    environment:
      CACHE_PORT: 6379
      CACHE_HOST: cache-service
  queue-service:
    image: rabbitmq:3.12-management
    networks:
      - app-network
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: queue-service
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  backend-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: cms-ddd-architecture
    networks:
      - app-network
    container_name: backend-service
    volumes:
      - .:/app
    # ports:
    #   - "4000:4000"
    env_file:
      - ./.env
    depends_on:
      - database-service
      - cache-service
      - queue-service
    command: pnpm --filter api-nest-app start:dev
  frontend-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: cms-ddd-architecture
    networks:
      - app-network
    container_name: frontend-service
    volumes:
      - .:/app
    environment:
      PORT: 3000
    depends_on:
      - backend-service
    command: pnpm --filter web-next-app dev
  web-service:
    container_name: app-web-service
    image: nginx:latest
    depends_on:
      - frontend-service
    environment:
    - NGINX_PORT=8765
    ports:
      - "8765:8765"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
networks:
  app-network:
    driver: bridge